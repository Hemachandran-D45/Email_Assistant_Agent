import streamlit as st
import json

# --- Human Review UI ---
def review_email(email, draft):
    """
    Streamlit UI for human review of generated emails.
    Args:
        email (dict): Incoming email details {sender, subject, body}
        draft (str): Draft reply generated by LLM
    Returns:
        dict: {status: 'approved' | 'edited' | 'rejected', reply: str}
    """
    st.title("📩 Human-in-the-Loop Email Review")
    st.subheader("Incoming Email")
    st.write(f"**From:** {email['sender']}")
    st.write(f"**Subject:** {email['subject']}")
    st.write(email['body'])

    st.subheader("🤖 Draft Reply")
    st.text_area("Generated Draft", draft, height=200, disabled=True)

    st.subheader("✏️ Review & Edit")
    edited_reply = st.text_area("Edit the draft if needed:", draft, height=200)

    action = st.radio("Choose an action:", ["Approve", "Edit & Approve", "Reject"])

    if st.button("✅ Submit"):
        if action == "Approve":
            return {"status": "approved", "reply": draft}
        elif action == "Edit & Approve":
            return {"status": "edited", "reply": edited_reply}
        else:
            return {"status": "rejected", "reply": ""}
    return None


# --- For running directly ---
if __name__ == "__main__":
    # Example data (this would normally come from classifier + draft generator)
    sample_email = {
        "sender": "customer@example.com",
        "subject": "Order issue",
        "body": "Hi, I have an issue with my recent order."
    }
    sample_draft = "Hi, I’m sorry to hear about your order issue. Could you please provide your order ID so I can assist further?"

    result = review_email(sample_email, sample_draft)

    if result:
        st.success(f"Decision: {result['status']}")
        if result['reply']:
            st.info(f"Reply: {result['reply']}")
        # In real workflow -> send result back to graph
